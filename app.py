# Dashboard interactif Streamlit pour visualiser les donn√©es RH d‚ÄôAkieni
import streamlit as st
import pandas as pd
import plotly.express as px

# Fonction de chargement des donn√©es avec cache
@st.cache_data
def load_data():
    df = pd.read_csv("data/students_data.csv")
    df["Taux Pr√©sence (%)"] = (df["Pr√©sences"] / df["Total_Cours"]) * 100
    return df

# Chargement des donn√©es
df = load_data()

# Titre de l‚Äôapplication
st.title("üìä Akieni RH Dashboard")
st.subheader("Suivi des performances et pr√©sences des √©tudiants")

# Filtrage par discipline
discipline = st.selectbox("Filtrer par discipline :", df["Discipline"].unique())
df_filtered = df[df["Discipline"] == discipline]

# Affichage des donn√©es brutes
st.dataframe(df_filtered)

# Bar chart : taux de pr√©sence
fig1 = px.bar(df_filtered, x="Nom", y="Taux Pr√©sence (%)", color="Nom",
              title="Taux de pr√©sence des √©tudiants", text_auto=".2f")
st.plotly_chart(fig1)

# Bar chart : scores acad√©miques
fig2 = px.bar(df_filtered, x="Nom", y="Score", color="Nom",
              title="Scores acad√©miques des √©tudiants", text_auto=".2f")
st.plotly_chart(fig2)

# Scatter plot : pr√©sence vs score
fig3 = px.scatter(df_filtered, x="Taux Pr√©sence (%)", y="Score", color="Nom",
                  size="Score", title="Corr√©lation Pr√©sence / Score")
st.plotly_chart(fig3)